version: "3.4"

volumes:
  mysql:
  project:
  results:
  secrets:
  mongo_data:


services:
  mysql:
    image: boinc/server_mysql:$VERSION$TAG$DEFAULTARGS
    build:
      context: images/mysql
      target: mysql$DEFAULTARGS
    volumes:
      - "mysql:/var/lib/mysql"
    ports:
      - 3306:3306

  zpg:

    hostname: zpg
    build:
      context: images/boinc-project
      dockerfile: docker/server.Dockerfile
    env_file:
      - .env
    ports:
      - 9192:8000

  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    command: --quiet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  makeproject:
    image: boinc/server_makeproject:$VERSION$TAG$DEFAULTARGS
    build:
      context: images/makeproject
      target: makeproject$DEFAULTARGS
      args:
        - TAG
        - BOINC_USER
        - PROJECT_ROOT
    volumes:
      - "project:$PROJECT_ROOT.dst"
      - "secrets:/run/secrets"
    hostname: makeproject
    environment:
      - URL_BASE
      - PROJECT

  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    depends_on:
      - apache
      - zpg
    ports:
      - 80:80
      - 443:443


  apache:
    image: boinc/server_apache:$VERSION$TAG$DEFAULTARGS
    build:
      context: images/apache
      target: apache$DEFAULTARGS
      args:
        - TAG
        - BOINC_USER
        - PROJECT_ROOT
    hostname: $PROJECT
    depends_on:
      - mysql
    volumes:
      - "project:$PROJECT_ROOT"
      - "results:/results"
      - "secrets:/run/secrets"
      - "/dev/null:/run/secrets/keys/code_sign_private"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "8081:80"
    tty: true
    environment:
      - URL_BASE
      - PROJECT
      - GIMMEFY_URL
